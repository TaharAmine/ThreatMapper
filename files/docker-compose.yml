version: '2.1'
services:

  deepfence_postgres:
    container_name: deepfence-postgres
    image: deepfenceio/deepfence_postgres_ce:latest
    restart: on-failure
    networks:
      - deepfence_net
    volumes:
      - deepfence_data_community:/data:rw

  redis:
    container_name: deepfence-redis
    image: deepfenceio/deepfence_redis_ce:latest
    restart: on-failure
    networks:
      - deepfence_net
    volumes:
      - deepfence_data_community:/data:rw

  deepfence_fetcher:
    container_name: deepfence-fetcher
    image: deepfenceio/deepfence_fetcher_ce:latest
    depends_on:
      - deepfence_postgres
    networks:
      - deepfence_net
    ports:
      - "8001:8001"
      - "8002:8002"
    restart: on-failure
    volumes:
      - deepfence_data_community:/data:rw

  deepfence_topology:
    container_name: deepfence-topology
    image: deepfenceio/deepfence_discovery_ce:latest
    pid: "host"
    privileged: true
    networks:
      - deepfence_net
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys/kernel/debug:/sys/kernel/debug:rw
      - deepfence_data_community:/data:rw

  deepfence_ti:
    container_name: deepfence-ti
    image: deepfenceio/deepfence_ti_ce:latest
    restart: on-failure
    networks:
      - deepfence_net
    ports:
      - "8003:8003"
    depends_on:
      - deepfence_topology
      - es_master
      - redis
    volumes:
      - deepfence_data_community:/data:rw

  es_master:
    container_name: deepfence-es-master
    image: deepfenceio/deepfence_elastic_ce:latest
    restart: on-failure
    networks:
      - deepfence_net
    volumes:
      - deepfence_data_community:/data:rw
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK

  nginx:
    container_name: deepfence-nginx
    image: deepfenceio/deepfence_nginx_ce:latest
    networks:
      - deepfence_net
    ports:
      - "80:80"
      - "443:443"
      - "8008:8008"
    depends_on:
      - api

  api:
    container_name: deepfence-api
    image: deepfenceio/deepfence_api_ce:latest
    tmpfs:
      - /tmp
    networks:
      - deepfence_net
    depends_on:
      - redis
      - deepfence_postgres
      - es_master
    volumes:
      - deepfence_data_community:/data:rw
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: /app/code/dockerify/api/entrypoint

  celery:
    container_name: deepfence-celery
    image: deepfenceio/deepfence_api_ce:latest
    entrypoint: /app/code/dockerify/celery/entrypoint
    restart: on-failure
    networks:
      - deepfence_net
    ports:
      - "8006:8006"
    depends_on:
      - redis
      - deepfence_postgres
    volumes:
      - deepfence_data_community:/data:rw
      - /var/run/docker.sock:/var/run/docker.sock

  celerybeat:
    container_name: deepfence-celerybeat
    image: deepfenceio/deepfence_api_ce:latest
    entrypoint: /app/code/dockerify/celerybeat/entrypoint
    restart: on-failure
    networks:
      - deepfence_net
    depends_on:
      - redis
      - deepfence_postgres

  ui:
    container_name: deepfence-ui
    image: deepfenceio/deepfence_ui_ce:latest
    networks:
      - deepfence_net
    depends_on:
      - deepfence_topology

  diagnosis:
    container_name: deepfence-diagnosis
    image: deepfenceio/deepfence_diagnosis_ce:latest
    networks:
      - deepfence_net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  vulnerability_mapper:
    container_name: df-vulnerability-mapper
    image: deepfenceio/deepfence_vulnerability_mapper_ce:latest
    restart: "no"
    entrypoint: /bin/true

  deepfence_agent:
    container_name: deepfence-agent
    image: deepfenceio/deepfence_agent_ce:latest
    restart: on-failure
    pid: host
    privileged: true
    network_mode: "host"
    volumes:
      - /sys/kernel/debug:/sys/kernel/debug:rw
      - /var/log/fenced
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/fenced/mnt/host/:ro
    environment:
      - DF_BACKEND_IP=localhost

volumes:
  deepfence_data_community:
    driver: local

networks:
  deepfence_net:
    driver: bridge